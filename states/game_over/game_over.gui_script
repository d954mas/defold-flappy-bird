local hashes = require("lib.hashes")
local save_file = sys.get_save_file("com.d954mas.flappybird","data")
local score_container_start_pos;
local game_over_end_pos;
local easing_game_over = vmath.vector({0,1,0})
function init(self)
	msg.post(".", "acquire_input_focus")
	--find nodes
	self.score_lbl=gui.get_node("score")
	self.best_lbl=gui.get_node("best")
	self.restart_node = gui.get_node("restart")
	self.score_container = gui.get_node("score_container")
	self.game_over = gui.get_node("game_over")
	--logic vars
	self.ignore_input = false
	self.score_container_pos = gui.get_position(self.score_container)
	self.data = sys.load(save_file)
	if(self.data.best==nil)then self.data.best=0 end
	
	--prepare for animation
	score_container_start_pos=vmath.vector3(self.score_container_pos)
	score_container_start_pos.y = -150
	game_over_end_pos=gui.get_position(self.game_over)
	game_over_end_pos.y = game_over_end_pos.y + 20
end

local function show_animation(self)
	self.ignore_input = true
	gui.set_position(self.score_container,score_container_start_pos)
	gui.animate(self.score_container,"position",self.score_container_pos,
	gui.EASING_OUTEXPO,1,0.5)
	
	gui.set_color(self.game_over,vmath.vector4(1,1,1,0))
	gui.animate(self.game_over,"color",vmath.vector4(1,1,1,1),gui.EASING_LINEAR,1)
	gui.animate(self.game_over,"position",game_over_end_pos,easing_game_over,0.6)
	
	gui.set_color(self.restart_node,vmath.vector4(1,1,1,0))
	gui.animate(self.restart_node,"color",vmath.vector4(1,1,1,1),gui.EASING_LINEAR,0.75,0.5,function() self.ignore_input = false  end)
end	

function on_message(self, message_id, message, sender)
	if(message_id == hashes.MESSAGE_SHOW) then
		show_animation(self)
		gui.set_text(self.score_lbl,message.score)
		gui.set_text(self.best_lbl,self.data.best)
		if(message.score>self.data.best) then
			self.data.best = message.score
			sys.save(save_file,self.data)
		end	
	end	
end

function on_input(self, action_id, action)
	if(not self.ignore_input and action_id == hashes.INPUT_TOUCH  and action.pressed 
		and gui.pick_node(self.restart_node,action.x,action.y)) then
		msg.post("controller",hashes.MESSAGE_RESTART)
	end
end
