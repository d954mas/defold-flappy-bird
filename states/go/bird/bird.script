local constants = require("lib.constants")
local screen_helper = require ("lib.screen_helper")
local lume = require ("lib.lume")

local hash_collision_response=hash("collision_response")
local hash_score = hash("score")
local hash_fly = hash("fly")
local hash_bird = hash("bird")
local hash_trigger_response=hash("trigger_response")
local hash_dirt = hash("dirt")
local hash_start_game = hash("start_game")
local hash_reset = hash("reset")

local position = vmath.vector3(constants.bird_position)
local velocity = vmath.vector3()
local acceleration = vmath.vector3(0,-460,0)

local hash_touch = hash("touch")
local rotation = 0
local flapping = true
local alive = true
local state = 0 -- 0 - idle, 1 - game

function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("#sprite", "play_animation", {id = hash_fly})
	go.set_position(position)
end

local function  is_falling()
    return velocity.y < -110;
end

local function should_flap()
    return velocity.y > -70 and alive
end

local function rotate(dt)
    if (velocity.y > 0) then rotation = rotation - 600 * dt
	elseif (is_falling() or not alive)then rotation = rotation +  480 * dt end
	rotation = lume.clamp(rotation,-20,90)
    go.set(".","euler.z",-rotation)
end

local function update_animation()
	local name = flapping and hash_fly or hash_bird
	msg.post("#sprite", "play_animation", {id = name})
end	

function update(self, dt)
	if(state == 0) then return end
	velocity = velocity + acceleration * dt
    if (velocity.y < -200) then velocity.y = -200 end
    position = position + velocity * dt 
    go.set_position(position)
    rotate(dt)
    if(flapping ~= should_flap())then
    	flapping = should_flap()
    	update_animation()
    end
end

function on_input(self, action_id, action)
	if(alive and action_id == hash_touch and action.pressed and
	position.y < screen_helper.game_height) then 
		velocity.y = 140 
		msg.post("/sounds#flap","play_sound")
	end	
end

local function reset(self)
	position = vmath.vector3(constants.bird_position)
	rotation = 0
	flapping = true
	alive = true
	state = 0 -- 0 - idle, 1 - game
	acceleration.y = -460
	msg.post("#sprite", "play_animation", {id = hash_fly})
	go.set_position(position)
	go.set(".","euler.z",-rotation)
end	


function on_message(self,message_id,message,sender)
	if(message_id == hash_collision_response and message.group ~= hash_score) then
		if(alive == true) then	
			alive = false
			msg.post("/sounds#dead","play_sound")
			msg.post("/grass#script","stop")
			msg.post("/pipe_factory#script","stop")
			msg.post("controller","game_over")
		end
		if(message.group == hash_dirt) then
			acceleration.y = 0
			velocity.y = 0
		end	
	elseif(message_id == hash_trigger_response and message.enter) then
		msg.post("/sounds#coin","play_sound")
		msg.post("controller","increase_score")
	elseif(message_id == hash_start_game) then
		state = 1
	elseif(message_id == hash_reset) then
		reset(self)
	end
end